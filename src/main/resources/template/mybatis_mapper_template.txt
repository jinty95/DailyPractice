package ${BASE_PACKAGE}.mapper;

import org.apache.ibatis.annotations.Param;
import ${BASE_PACKAGE}.entity.${CLASS_NAME};
import ${BASE_PACKAGE}.bo.IdRange;

import java.util.List;

/**
 * ${TABLE_COMMENT} - Mapper
 *
 * @author ${AUTHOR}
 * @date ${DATE}
 */
public interface ${CLASS_NAME}Mapper {

    /**
     * 插入(字段都填充默认值)
     */
    int insertDefault();

    /**
     * 插入(忽略空字段)
     */
    int insert(@Param("item") ${CLASS_NAME} item);

    /**
     * 批量插入(空字段填充默认值)
     */
    int batchInsert(@Param("list") List<${CLASS_NAME}> list);

    /**
     * 根据主键更新(忽略空字段)
     * 注意：更新语句中包含了update_time字段，会导致ON UPDATE CURRENT_TIMESTAMP失效，使用时需要手动赋予当前时间
     */
    int updateBy${PK_FIELD_NAME_UPPER_FIRST}(@Param("item") ${CLASS_NAME} item);

    /**
     * 根据条件更新(忽略空字段)
     */
    int updateByParam(@Param("item") ${CLASS_NAME} item, @Param("param") ${CLASS_NAME} param);

    /**
     * 根据主键批量逻辑删除
     */
    int logicDeleteBy${PK_FIELD_NAME_UPPER_FIRST}s(@Param("${PK_FIELD_NAME}s") List<${PK_FIELD_TYPE}> ${PK_FIELD_NAME}s, @Param("updatedBy") String updatedBy);

    /**
     * 根据主键删除
     */
    int deleteBy${PK_FIELD_NAME_UPPER_FIRST}(@Param("${PK_FIELD_NAME}") ${PK_FIELD_TYPE} ${PK_FIELD_NAME});

    /**
     * 根据主键批量删除
     */
    int deleteBy${PK_FIELD_NAME_UPPER_FIRST}s(@Param("${PK_FIELD_NAME}s") List<${PK_FIELD_TYPE}> ${PK_FIELD_NAME}s);

    /**
     * 根据主键查询
     */
    ${CLASS_NAME} selectBy${PK_FIELD_NAME_UPPER_FIRST}(@Param("${PK_FIELD_NAME}") ${PK_FIELD_TYPE} ${PK_FIELD_NAME});

    /**
     * 根据主键批量查询
     */
    List<${CLASS_NAME}> selectBy${PK_FIELD_NAME_UPPER_FIRST}s(@Param("${PK_FIELD_NAME}s") List<${PK_FIELD_TYPE}> ${PK_FIELD_NAME}s);

    /**
     * 查询(条件忽略空字段)
     */
    List<${CLASS_NAME}> selectByParam(@Param("param") ${CLASS_NAME} param);

    /**
     * 查询数量(条件忽略空字段)
     */
    int selectCount(@Param("param") ${CLASS_NAME} param);

    /**
     * 分页查询(条件忽略空字段)
     */
    List<${CLASS_NAME}> selectByPage(@Param("param") ${CLASS_NAME} param, @Param("start") Integer start, @Param("length") Integer length);

    /**
     * ID分片查询(条件忽略空字段)
     */
    List<${CLASS_NAME}> selectByIdShard(@Param("param") ${CLASS_NAME} param, @Param("shardTotal") Integer shardTotal, @Param("shardNum") Integer shardNum);

    /**
     * 查询ID范围(条件忽略空字段)
     */
    IdRange selectIdRange(@Param("param") ${CLASS_NAME} param);

    /**
     * 根据ID范围进行查询(条件忽略空字段)
     */
    List<${CLASS_NAME}> selectByIdRange(@Param("param") ${CLASS_NAME} param, @Param("minId") Long minId, @Param("maxId") Long maxId);

}