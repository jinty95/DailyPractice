package ${BASE_PACKAGE}.service.impl;

import ${BASE_PACKAGE}.entity.${CLASS_NAME};
import ${BASE_PACKAGE}.service.${CLASS_NAME}Service;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * ${TABLE_COMMENT} - ServiceImpl
 *
 * @author ${AUTHOR}
 * @date ${DATE}
 */
@Slf4j
@Service
public class ${CLASS_NAME}ServiceImpl implements ${CLASS_NAME}Service {

    @Autowired
    private ${CLASS_NAME}Mapper mapper;

    @Override
    public boolean insert(${CLASS_NAME} item) {
        try {
            return mapper.insert(item) > 0;
        } catch (Exception e) {
            log.error(String.format("${TABLE_COMMENT}-保存失败：item=%s", item), e);
            throw new RuntimeException("${TABLE_COMMENT}-保存失败");
        }
    }

    @Override
    public boolean batchInsert(List<${CLASS_NAME}> list) {
        try {
            return mapper.batchInsert(list) > 0;
        } catch (Exception e) {
            log.error(String.format("${TABLE_COMMENT}-批量保存失败：list=%s", list), e);
            throw new RuntimeException("${TABLE_COMMENT}-批量保存失败");
        }
    }

    @Override
    public boolean updateByPk(${CLASS_NAME} item) {
        try {
            return mapper.updateByPk(item) > 0;
        } catch (Exception e) {
            log.error(String.format("${TABLE_COMMENT}-更新失败：item=%s", item), e);
            throw new RuntimeException("${TABLE_COMMENT}-更新失败");
        }
    }

    @Override
    public ${CLASS_NAME} selectByPk(${PK_FIELD_TYPE} ${PK_FIELD_NAME}) {
        try {
            return mapper.selectByPk(${PK_FIELD_NAME});
        } catch (Exception e) {
            log.error(String.format("${TABLE_COMMENT}-查询失败：${PK_FIELD_NAME}=%s", ${PK_FIELD_NAME}), e);
            throw new RuntimeException("${TABLE_COMMENT}-查询失败");
        }
    }

    @Override
    public List<${CLASS_NAME}> select(${CLASS_NAME} item) {
        try {
            return mapper.select(item);
        } catch (Exception e) {
            log.error(String.format("${TABLE_COMMENT}-查询失败：item=%s", item), e);
            throw new RuntimeException("${TABLE_COMMENT}-查询失败");
        }
    }

}