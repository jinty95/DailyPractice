<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${BASE_PACKAGE}.${END_PACKAGE_MAPPER}.${CLASS_NAME}${END_NAME_MAPPER}">

    <!-- 查询结果映射 -->
    <resultMap id="baseResultMap" type="${BASE_PACKAGE}.${END_PACKAGE_ENTITY}.${CLASS_NAME}${END_NAME_ENTITY}">
        <id column="${PK_COLUMN_NAME}" property="${PK_FIELD_NAME}"/>
        ${FOR_EACH}<result column="${COLUMN_NAME}" property="${FIELD_NAME}"/>
        ${END_FOR_EACH}
    </resultMap>

    <!-- 表的所有字段 -->
    <sql id="baseColumns">
        <trim suffixOverrides=",">
        `${PK_COLUMN_NAME}`, ${FOR_EACH}`${COLUMN_NAME}`, ${END_FOR_EACH}
        </trim>
    </sql>

    <!-- 基础查询条件 -->
    <sql id="baseSelectCondition">
        <if test="param.${PK_FIELD_NAME} != null"> and `${PK_COLUMN_NAME}` = #{param.${PK_FIELD_NAME}} </if>
        ${FOR_EACH}<if test="param.${FIELD_NAME} != null"> and `${COLUMN_NAME}` = #{param.${FIELD_NAME}} </if>
        ${END_FOR_EACH}
    </sql>

    <!-- 插入(字段都填充默认值) -->
    <insert id="insertDefault">
        insert into `${TABLE_NAME}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ${FOR_EACH}`${COLUMN_NAME}`, ${END_FOR_EACH}
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            ${FOR_EACH}${COLUMN_DEFAULT}, ${END_FOR_EACH}
        </trim>
    </insert>

    <!-- 插入(忽略空字段) -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="item.${PK_FIELD_NAME}">
        insert into `${TABLE_NAME}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ${FOR_EACH}<if test="item.${FIELD_NAME} != null">`${COLUMN_NAME}`,</if>
            ${END_FOR_EACH}
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            ${FOR_EACH}<if test="item.${FIELD_NAME} != null">#{item.${FIELD_NAME}},</if>
            ${END_FOR_EACH}
        </trim>
    </insert>

    <!-- 批量插入(空字段填充默认值) -->
    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="${PK_FIELD_NAME}">
        insert into `${TABLE_NAME}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ${FOR_EACH}`${COLUMN_NAME}`, ${END_FOR_EACH}
        </trim>
        values
        <foreach item="item" collection="list" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                ${FOR_EACH}<choose><when test="item.${FIELD_NAME} != null">#{item.${FIELD_NAME}}, </when><otherwise>${COLUMN_DEFAULT}, </otherwise></choose>
                ${END_FOR_EACH}
            </trim>
        </foreach>
    </insert>

    <!-- 根据主键更新(忽略空字段) -->
    <update id="updateBy${PK_FIELD_NAME_UPPER_FIRST}">
        update `${TABLE_NAME}`
        <set>
            ${FOR_EACH}<if test="item.${FIELD_NAME} != null"> `${COLUMN_NAME}` = #{item.${FIELD_NAME}}, </if>
            ${END_FOR_EACH}
        </set>
        where `is_deleted` = 0 and `${PK_COLUMN_NAME}` = #{item.${PK_FIELD_NAME}}
    </update>

    <!-- 根据条件更新(忽略空字段) -->
    <update id="updateByParam">
        update `${TABLE_NAME}`
        <set>
            ${FOR_EACH}<if test="item.${FIELD_NAME} != null"> `${COLUMN_NAME}` = #{item.${FIELD_NAME}}, </if>
            ${END_FOR_EACH}
        </set>
        where 1 = 1
        <include refid="baseSelectCondition"/>
    </update>

    <!-- 根据主键批量逻辑删除 -->
    <update id="logicDeleteBy${PK_FIELD_NAME_UPPER_FIRST}s">
        update `${TABLE_NAME}`
        set `is_deleted` = 1, `updated_by` = #{updatedBy}
        where `is_deleted` = 0 and `${PK_COLUMN_NAME}` in
        <foreach item="${PK_FIELD_NAME}" collection="${PK_FIELD_NAME}s" index="index" separator="," open="(" close=")">
            #{${PK_FIELD_NAME}}
        </foreach>
    </update>

    <!-- 根据主键删除 -->
    <delete id="deleteBy${PK_FIELD_NAME_UPPER_FIRST}">
        delete from `${TABLE_NAME}`
        where `${PK_COLUMN_NAME}` = #{${PK_FIELD_NAME}}
    </delete>

    <!-- 根据主键批量删除 -->
    <delete id="deleteBy${PK_FIELD_NAME_UPPER_FIRST}s">
        delete from `${TABLE_NAME}`
        where `${PK_COLUMN_NAME}` in
        <foreach item="${PK_FIELD_NAME}" collection="${PK_FIELD_NAME}s" index="index" separator="," open="(" close=")">
            #{${PK_FIELD_NAME}}
        </foreach>
    </delete>

    <!-- 根据主键查询 -->
    <select id="selectBy${PK_FIELD_NAME_UPPER_FIRST}" resultMap="baseResultMap">
        select <include refid="baseColumns"/>
        from `${TABLE_NAME}`
        where `is_deleted` = 0 and `${PK_COLUMN_NAME}` = #{${PK_FIELD_NAME}}
    </select>

    <!-- 根据主键批量查询 -->
    <select id="selectBy${PK_FIELD_NAME_UPPER_FIRST}s" resultMap="baseResultMap">
        select <include refid="baseColumns"/>
        from `${TABLE_NAME}`
        where `is_deleted` = 0 and `${PK_COLUMN_NAME}` in
        <foreach item="${PK_FIELD_NAME}" collection="${PK_FIELD_NAME}s" index="index" separator="," open="(" close=")">
            #{${PK_FIELD_NAME}}
        </foreach>
    </select>

    <!-- 查询(条件忽略空字段) -->
    <select id="selectByParam" resultMap="baseResultMap">
        select <include refid="baseColumns"/>
        from `${TABLE_NAME}`
        where 1 = 1
        <include refid="baseSelectCondition"/>
    </select>

    <!-- 查询数量(条件忽略空字段) -->
    <select id="selectCount" resultType="java.lang.Integer">
        select count(1)
        from `${TABLE_NAME}`
        where 1 = 1
        <include refid="baseSelectCondition"/>
    </select>

    <!-- 分页查询(条件忽略空字段) -->
    <select id="selectByPage" resultMap="baseResultMap">
        select <include refid="baseColumns"/>
        from `${TABLE_NAME}`
        where 1 = 1
        <include refid="baseSelectCondition"/>
        order by id desc
        <if test="start != null and length != null">
            limit #{start}, #{length}
        </if>
    </select>

    <!-- ID分片查询(条件忽略空字段) -->
    <select id="selectByIdShard" resultMap="baseResultMap">
        select <include refid="baseColumns"/>
        from `${TABLE_NAME}`
        where 1 = 1
        <include refid="baseSelectCondition"/>
        <if test="shardTotal != null and shardId != null">and `id` % #{shardTotal} = #{shardId}</if>
    </select>

    <!-- 查询ID范围(条件忽略空字段) -->
    <select id="selectIdRange" resultType="${BASE_PACKAGE}.bo.IdRange">
        select min(`id`) as minId, max(`id`) as maxId
        from `${TABLE_NAME}`
        where 1 = 1
        <include refid="baseSelectCondition"/>
    </select>

    <!-- 根据ID范围进行查询(条件忽略空字段) -->
    <select id="selectByIdRange" resultMap="baseResultMap">
        select <include refid="baseColumns"/>
        from `${TABLE_NAME}`
        where 1 = 1
        <include refid="baseSelectCondition"/>
        <if test="minId != null"> and `id` &gt;= #{minId} </if>
        <if test="maxId != null"> and `id` &lt;= #{maxId} </if>
    </select>

</mapper>
